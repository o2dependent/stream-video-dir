---
import Layout from "$layouts/Layout.astro";
import BackButton from "$components/BackButton.svelte";

// get filepath param
const { filepath } = Astro.params;
const hostname = Astro.url.hostname;
let startTime = 0;
try {
	const pb = Astro.locals.pb;
	let watchedTimestamp = await pb
		.collection("watched_timestamps")
		.getFirstListItem(
			pb.filter(`filepath = {:filepath} && profile = {:profile_id}`, {
				filepath,
				profile_id: Astro.locals?.profile?.id,
			}),
		);
	if (!watchedTimestamp) {
		watchedTimestamp = await pb.collection("watched_timestamps").create({
			filepath,
			profile: Astro.locals?.profile?.id,
			time: 0,
		});
	}
	startTime = watchedTimestamp?.timestamp ?? 0;
} catch (error) {
	console.error(error);
}
console.log({ startTime });
---

<Layout title="Welcome to Astro.">
	<main>
		<BackButton filepath={filepath?.replace("/watch", "") ?? ""} />
		<h1>{filepath?.split("/")?.at(-1)}</h1>
		<eo-video-player data-hostname={hostname} data-filepath={filepath}>
			<video controls>
				<source
					src={`/video/${filepath}${startTime ? `#t=${startTime}` : ""}`}
					type="video/mp4"
				/>
				 Your browser does not support the video tag.
			</video>
		</eo-video-player>
		<script>
			import { io } from "socket.io-client";
			console.log("HELLO");
			class EOVideoPlayer extends HTMLElement {
				constructor() {
					super();
					const hostname = this.dataset.hostname;
					const filepath = this.dataset.filepath;
					const socket = io(`${hostname}:5432`, {
						withCredentials: true,
					});
					const timeupdate = (e: Event) => {
						socket.emit("timeupdate", {
							filepath,
							time: (e.currentTarget as HTMLVideoElement).currentTime,
							duration: (e.currentTarget as HTMLVideoElement).duration,
						});
					};
					const video = this.querySelector("video");
					video?.addEventListener("timeupdate", timeupdate);
				}
			}
			customElements.define("eo-video-player", EOVideoPlayer);
		</script>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(
			rgba(var(--accent-dark), 66%),
			rgba(var(--accent-dark), 33%)
		);
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
