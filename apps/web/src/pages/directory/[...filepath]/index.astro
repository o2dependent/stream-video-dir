---
import Layout from "$layouts/Layout.astro";
import DirectoryList from "$components/DirectoryList.svelte";
import BackButton from "$components/BackButton.svelte";
import { BASE_VOLUME_PATH } from "$lib/constants";
import fs from "fs";

const sortByPath = (a: any, b: any) => {
	const aPath = a.path.split(" ");
	const bPath = b.path.split(" ");
	for (let i = 0; i < aPath.length; i++) {
		const bothAreNumbers =
			!isNaN(parseInt(aPath[i])) && !isNaN(parseInt(bPath[i]));

		if (bothAreNumbers && parseInt(aPath[i]) > parseInt(bPath[i])) return 1;
		if (bothAreNumbers && parseInt(aPath[i]) < parseInt(bPath[i])) return -1;
	}
	return 0;
};

// get filepath param
let directory: {
	id: string;
	path: string;
	timestamp?: number;
	updated?: string;
	duration?: number;
}[] = [];
let latestVideoId: string | undefined;

let { filepath } = Astro.params;
const pb = Astro.locals.pb;

try {
	let dir = fs.readdirSync(
		`${BASE_VOLUME_PATH}${filepath ? "/" + filepath : ""}`,
	);
	let newDirectory = dir?.filter((file) => !file.startsWith("."));
	const dirFilter = newDirectory
		.map((filename) =>
			pb.filter("(filepath = {:path} && profile = {:profileId} )", {
				path: `${filepath}/${filename?.replace(".mp4", "")}`,
				profileId: Astro.locals.profile?.id,
			}),
		)
		.join(" || ");
	const watchedTimestamps = await pb
		.collection("watched_timestamps")
		.getFullList({
			filter: `${dirFilter}`,
			sort: "-updated",
		});
	// add watched timestamps to directory
	latestVideoId = watchedTimestamps?.[0]?.id;
	directory = newDirectory
		.map((filename) => {
			const watchedTimestamp = watchedTimestamps.find((wt, idx) => {
				const isSamePath =
					wt.filepath === `${filepath}/${filename?.replace(".mp4", "")}`;
				return isSamePath;
			});
			return {
				id: watchedTimestamp?.id ?? "NO ID FOUND",
				path: filename,
				timestamp: watchedTimestamp?.timestamp,
				updated: watchedTimestamp?.updated,
				duration: watchedTimestamp?.duration,
			};
		})
		.sort(sortByPath);
} catch (err) {
	console.error(err);
}
---

<Layout title="Welcome to Astro.">
	<main>
		<BackButton filepath={filepath ?? ""} />
		<DirectoryList {filepath} {directory} {latestVideoId} />
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(
			rgba(var(--accent-dark), 66%),
			rgba(var(--accent-dark), 33%)
		);
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
